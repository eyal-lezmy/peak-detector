#include "PeakDetector.h"

int main(int argc, char const *argv[]) {

  int values[] = {402, 410, 415, 418, 420, 420, 419, 418, 414, 412, 410, 405, 404, 401, 400, 398, 396, 395, 394, 393, 392, 393, 391, 392, 391, 393, 390, 389, 390, 390, 390, 389, 389, 389, 388, 388, 389, 388, 388, 388, 387, 388, 388, 387, 386, 387, 387, 388, 387, 387, 388, 386, 388, 387, 388, 388, 387, 388, 386, 387, 388, 388, 387, 384, 388, 385, 385, 384, 384, 383, 383, 382, 382, 381, 381, 380, 379, 378, 375, 373, 372, 369, 366, 363, 361, 358, 355, 355, 357, 362, 369, 379, 392, 402, 410, 415, 418, 418, 415, 412, 409, 406, 403, 401, 397, 396, 395, 393, 392, 392, 390, 390, 389, 389, 389, 387, 388, 388, 388, 388, 389, 387, 387, 388, 387, 387, 387, 388, 387, 387, 387, 386, 388, 387, 387, 384, 388, 385, 384, 384, 384, 381, 381, 380, 378, 375, 372, 369, 364, 360, 356, 355, 357, 364, 379, 397, 410, 417, 418, 415, 411, 406, 402, 398, 396, 393, 392, 391, 389, 389, 390, 388, 389, 389, 388, 387, 387, 387, 388, 387, 386, 387, 386, 387, 388, 386, 386, 385, 385, 385, 383, 382, 381, 380, 378, 380, 388, 389, 389, 387, 372, 374, 366, 358, 381, 372, 391, 401, 405, 405, 405, 403, 401, 399, 396, 394, 394, 393, 394, 392, 392, 391, 391, 391, 391, 389, 390, 390, 390, 390, 389, 389, 390, 389, 389, 389, 389, 389, 386, 383, 379, 374, 364, 355, 353, 360, 374, 393, 402, 405, 406, 403, 402, 400, 398, 396, 395, 394, 393, 392, 392, 391, 391, 390, 391, 390, 390, 390, 388, 389, 389, 390, 390, 389, 388, 388, 385, 380, 372, 363, 353, 355, 371, 389, 402, 405, 404, 403, 399, 396, 395, 393, 393, 392, 391, 388, 388, 388, 388, 387, 387, 388, 389, 387, 389, 388, 389, 388};

  PeakDetector peakDetector;

  int arraySize = sizeof(values)/sizeof(*values);
  for (size_t i = 0; i < arraySize; i++) {
    bool isPeakDetected = peakDetector.addValue(values[i]);
    printf("%d", values[i]);

    if(isPeakDetected) {
      printf("PEAK detected\n");
    } else {
      printf("/n");
    }
  }

  return 0;
}
